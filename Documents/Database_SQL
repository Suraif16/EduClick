#creating database

CREATE DATABASE EduClickDB;

USE EduclickDB;

CREATE TABLE Users(
    UserID BIGINT,
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    ProfilePic BIGINT,
    DOB DATE,
    MobileNum INT,
    UserType VARCHAR(20),
    PRIMARY KEY(UserID)
    );

CREATE TABLE Student(
    UserID BIGINT,
    School VARCHAR(200),
    GRADE INT,
    PRIMARY KEY(UserID)
    );

CREATE TABLE Teacher(
    UserID BIGINT,
    CurrentWorkingPlace VARCHAR(300),
    PRIMARY KEY(UserID)
    );

CREATE TABLE Classroom_has_EPost(
    ClassroomID BIGINT,
    EPostID BIGINT,
    PRIMARY KEY(ClassroomID)
    );

CREATE TABLE Classroom(
    ClassroomID BIGINT,
    CR_Name VARCHAR(100),
    CR_Code VARCHAR(30),
    Year YEAR,
    Grade INT,
    Subject VARCHAR(100),
    UserID BIGINT,
    PRIMARY KEY(ClassroomID)
    );

CREATE TABLE Login(
    EmailID BIGINT,
    Password VARCHAR(50),
    LoginTime TIME,
    UserID BIGINT,
    PRIMARY KEY(EmailID)
    );

CREATE TABLE Enroll(
    UserID BIGINT,
    CR_ID BIGINT,
    Status VARCHAR(40),
    CONSTRAINT PK_Enroll PRIMARY KEY(UserID,CR_ID)
    );

CREATE TABLE Answer_Student_Post_Relationship(
    St_UserID BIGINT,
    AnswerID BIGINT,
    EPostID BIGINT,
    CONSTRAINT PK_Ans_Stu_Post PRIMARY KEY(St_UserID,AnswerID,EPostID)
    );

CREATE TABLE Answer(
    AnswerID BIGINT,
    Date DATE,
    Time TIME,
    Marks INT,
    PRIMARY KEY(AnswerID)
    );

CREATE TABLE EDW_Answers(
    AnswerID BIGINT,
    Content LONGTEXT,
    ImagePath BIGINT,
    PRIMARY KEY(AnswerID)
    );

ALTER TABLE STUDENT
    ADD FOREIGN KEY(UserID) REFERENCES Users(UserID)
    ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE TEACHER
    ADD FOREIGN KEY(UserID) REFERENCES Users(UserID)
    ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE Classroom_has_EPost
    -> ADD FOREIGN KEY(ClassroomID) REFERENCES Classroom(ClassroomID) ON UPDATE CASCADE ON DELETE CASCADE,
    -> ADD FOREIGN KEY(EPostID) REFERENCES educationalpost(EPostID) ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE Login
    -> ADD FOREIGN KEY(UserID) REFERENCES Users(UserID) ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE Classroom
    -> ADD FOREIGN KEY(UserID) REFERENCES Users(UserID) ON UPDATE CASCADE ON DELETE CASCADE;

 ALTER TABLE Enroll
    -> ADD FOREIGN KEY(UserID) REFERENCES Users(UserID) ON UPDATE CASCADE ON DELETE CASCADE,
    -> ADD FOREIGN KEY(CR_ID) REFERENCES Classroom(ClassroomID) ON UPDATE CASCADE ON DELETE CASCADE;

 ALTER TABLE answer_student_post_relationship
    -> ADD FOREIGN KEY(St_UserID) REFERENCES Student(UserID) ON UPDATE CASCADE ON DELETE CASCADE,
    -> ADD FOREIGN KEY(AnswerID) REFERENCES Answer(AnswerID) ON UPDATE CASCADE ON DELETE CASCADE,
    -> ADD FOREIGN KEY(EPostID) REFERENCES educationalpost(EPostID) ON UPDATE CASCADE ON DELETE CASCADE;

 ALTER TABLE EDW_Answers
    -> ADD FOREIGN KEY(AnswerID) REFERENCES Answer(AnswerID) ON UPDATE CASCADE ON DELETE CASCADE;

CREATE TABLE Question(
	QuestionID BIGINT,
	Correct_answers LONGTEXT,
	EPostID BIGINT,
	PRIMARY KEY(QuestionID)
	);

CREATE TABLE Question_answer_value(
	QuestionID BIGINT,
	Answer_no INT,
	Answer LONGTEXT,
	CONSTRAINT PK_Question_answer_value PRIMARY KEY(QuestionID,Answer_no)
	);


CREATE TABLE Delete(
	ReportID BIGINT,
	EmailID BIGINT,
	PRIMARY KEY(ReportID)
	);


CREATE TABLE Report(
	ReportID BIGINT,
	Count INT,
	Report_delete_flag BOOLEAN,
	UserID BIGINT,
	AnswerID BIGINT,
	NF_postID BIGINT,
	EpostID BIGINT,
	PRIMARY KEY(ReportID)
	);

CREATE TABLE User_marks_report(
	UserID BIGINT,
	ReportID BIGINT,
	PRIMARY KEY(UserID)
	);

CREATE TABLE Qualifications(
	UserID BIGINT,
	Qualification_form LONGTEXT,
	CONSTRAINT PK_Qualifications PRIMARY KEY(UserID,Qualification_form)
	);

CREATE TABLE Add_friens(
	UserID BIGINT,
	Friend_UserID BIGINT,
	CONSTRAINT PK_Add_frineds KEY(UserID, Friend_UserID)
	);

CREATE TABLE Follows(
	S_UserID BIGINT,
	T_UserID BIGINT,
	CONSTRAINT PK_Follows KEY(S_UserID, T_UserID)
	);

CREATE TABLE News_feed_image(
	NFPostID BIGINT,
	ImagePath BIGINT,
	CONSTRAINT PK_News_feed_image KEY(NFPostID,ImagePath)
	);

CREATE TABLE Admin(
	EmailID BIGINT,
	Password VARCHAR(40),
	AdminName VARCHAR(50),
	PRIMARY KEY(EmailID)
	);

CREATE TABLE EducationalPost(
	EPostID BIGINT,
	Date DATE,
	Time TIME,
	EPtype VARCHAR(40),
	PRIMARY KEY(EPostID)
	);

CREATE TABLE EducationalWork(
	EPostID BIGINT,
	ImagePath BIGINT,
	Caption VARCHAR(40),
	PRIMARY KEY(EPostID)
	);

CREATE TABLE Likes(
	UserID BIGINT,
	NFPostID BIGINT,
	CONSTRAINT PK_likes PRIMARY KEY(St_UserID,NFPostID)
	);

CREATE TABLE MCQ(
	EPostID BIGINT,
	Caption VARCHAR(40),
	PRIMARY KEY(EPostID)
	);

CREATE TABLE MCQ_Answers(
	AnswerID BIGINT,
	Choise VARCHAR(50),
	QuestionID BIGINT,
	PRIMARY KEY(AnswerID)
	);

CREATE TABLE NewsFeeds(
	EPostID BIGINT,
	Date DATE,
	Time TIME,
	Caption VARCHAR(50),
	PRIMARY KEY(EPostID)
	);

CREATE TABLE Posts(
	T_UserID BIGINT,
	St_UserID BIGINT,
	NFPostID BIGINT,
	);

CREATE TABLE Subject(
	UserID BIGINT,
	Subject VARCHAR(40),
	CONSTRAINT PK_subject PRIMARY KEY(UserID,Subject)
	);

ALTER TABLE EducationalWork
    ADD FOREIGN KEY(EPostID) REFERENCES EducationalPost(EPostID)
    ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE Likes
    ADD FOREIGN KEY(UserID) REFERENCES Users(UserID)
    ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE Likes
    ADD FOREIGN KEY(NFPostID) REFERENCES NewsFeeds(NFPostID)
    ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE MCQ
    ADD FOREIGN KEY(EPostID) REFERENCES EducationalPost(EPostID)
    ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE MCQ_Answers
    ADD FOREIGN KEY(AnswerID) REFERENCES Answer(AnswerID)
    ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE Posts
    ADD FOREIGN KEY(T_UserID) REFERENCES Teacher(UserID)
    ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE Posts
    ADD FOREIGN KEY(St_UserID) REFERENCES Student(UserID)
    ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE Posts
    ADD FOREIGN KEY(NFPostID) REFERENCES NewsFeeds(NFPostID)
    ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE Subject
    ADD FOREIGN KEY(UserID) REFERENCES Teacher(UserID)
    ON UPDATE CASCADE ON DELETE CASCADE;
