#creating database

CREATE DATABASE EduClickDB;

USE EduClickDB;

CREATE TABLE Users(
    UserID BIGINT NOT NULL AUTO_INCREMENT,
    FirstName VARCHAR(50) NOT NULL,
    LastName VARCHAR(50) NOT NULL,
    ProfilePic BIGINT,
    DOB DATE NOT NULL,
    MobileNum INT,
    UserType ENUM('Student','Teacher') NOT NULL,
    Country VARCHAR(30),
    PRIMARY KEY(UserID)
    )ENGINE = INNODB;

CREATE TABLE Student(
    UserID BIGINT NOT NULL,
    School VARCHAR(50),
    GRADE INT NOT NULL,
    PRIMARY KEY(UserID)
    )ENGINE = INNODB;

CREATE TABLE Teacher(
    UserID BIGINT NOT NULL,
    CurrentWorkingPlace VARCHAR(50),
    PRIMARY KEY(UserID)
    )ENGINE = INNODB;

CREATE TABLE Classroom_Has_EPost(
    ClassroomID BIGINT NOT NULL,
    EPostID BIGINT NOT NULL,
    CONSTRAINT PK_Classroom_has_EPost PRIMARY KEY(ClassroomID,EPostID)
    )ENGINE = INNODB;

CREATE TABLE Classroom(
    ClassroomID BIGINT NOT NULL AUTO_INCREMENT,
    CR_Name VARCHAR(50) NOT NULL,
    CR_Code VARCHAR(30) UNIQUE NOT NULL,
    Year YEAR,
    Grade INT,
    Subject VARCHAR(20),
    UserID BIGINT NOT NULL,
    PRIMARY KEY(ClassroomID)
    )ENGINE = INNODB;

CREATE TABLE Login(
    EmailID VARCHAR(400) NOT NULL,
    Password CHAR(64) NOT NULL,
    LoginDate DATE NOT NULL,
    LoginTime TIME NOT NULL,
    UserID BIGINT NOT NULL,
    PRIMARY KEY(EmailID)
    )ENGINE = INNODB;

CREATE TABLE Enroll(
    UserID BIGINT NOT NULL,
    ClassroomID BIGINT NOT NULL,
    Status ENUM('Enable','Disable') NOT NULL,
    CONSTRAINT PK_Enroll PRIMARY KEY(UserID,ClassroomID)
    )ENGINE = INNODB;

CREATE TABLE Answer_Student_Post_Relationship(
    S_UserID BIGINT NOT NULL,
    AnswerID BIGINT NOT NULL,
    EPostID BIGINT NOT NULL,
    CONSTRAINT PK_Ans_Stu_Post PRIMARY KEY(S_UserID,AnswerID,EPostID)
    )ENGINE = INNODB;

CREATE TABLE Answer(
    AnswerID BIGINT NOT NULL AUTO_INCREMENT,
    Date DATE NOT NULL,
    Time TIME NOT NULL,
    Marks INT,
    PRIMARY KEY(AnswerID)
    )ENGINE = INNODB;

CREATE TABLE EDW_Answers(
    AnswerID BIGINT NOT NULL,
    Content VARCHAR(8000),
    ImagePath BIGINT,
    PRIMARY KEY(AnswerID)
    )ENGINE = INNODB;

CREATE TABLE Question(
	QuestionID BIGINT NOT NULL AUTO_INCREMENT,
	Correct_answers VARCHAR(8000),
	EPostID BIGINT NOT NULL,
	PRIMARY KEY(QuestionID)
	)ENGINE = INNODB;

CREATE TABLE Question_Answer_Value(
	QuestionID BIGINT NOT NULL,
	Answer_no ENUM('1','2','3','4') NOT NULL,
	Answer TEXT NOT NULL,
	CONSTRAINT PK_Question_Answer_Value PRIMARY KEY(QuestionID,Answer_no)
	)ENGINE = INNODB;


CREATE TABLE RemoveEntity(
	ReportID BIGINT NOT NULL,
	EmailID VARCHAR(400) NOT NULL,
	PRIMARY KEY(ReportID)
	)ENGINE = INNODB;


CREATE TABLE Report(
	ReportID BIGINT NOT NULL AUTO_INCREMENT,
	Count INT NOT NULL,
	Report_delete_flag BOOLEAN NOT NULL,
	UserID BIGINT,
	AnswerID BIGINT,
	NF_postID BIGINT,
	EpostID BIGINT,
	PRIMARY KEY(ReportID)
	)ENGINE = INNODB;

CREATE TABLE User_Makes_Report(
	UserID BIGINT NOT NULL,
	ReportID BIGINT NOT NULL,
	PRIMARY KEY(UserID)
	)ENGINE = INNODB;

CREATE TABLE Qualifications(
	UserID BIGINT NOT NULL,
	Qualification VARCHAR(200),
	CONSTRAINT PK_Qualifications PRIMARY KEY(UserID,Qualification)
	)ENGINE = INNODB;

CREATE TABLE Add_Friends(
	UserID BIGINT NOT NULL,
	Friend_UserID BIGINT NOT NULL,
	CONSTRAINT PK_Add_Friends PRIMARY KEY(UserID, Friend_UserID)
	)ENGINE = INNODB;

CREATE TABLE Follows(
	S_UserID BIGINT NOT NULL,
	T_UserID BIGINT NOT NULL,
	CONSTRAINT PK_Follows PRIMARY KEY(S_UserID, T_UserID)
	)ENGINE = INNODB;

CREATE TABLE News_Feed_Image(
	NFPostID BIGINT NOT NULL AUTO_INCREMENT,
	ImagePath BIGINT NOT NULL,
	CONSTRAINT PK_News_Feed_Image PRIMARY KEY(NFPostID,ImagePath)
	)ENGINE = INNODB;

CREATE TABLE Admin(
	EmailID VARCHAR(400) NOT NULL,
	Password CHAR(64) NOT NULL,
	AdminName VARCHAR(50) NOT NULL,
	PRIMARY KEY(EmailID)
	)ENGINE = INNODB;

CREATE TABLE EducationalPost(
	EPostID BIGINT NOT NULL AUTO_INCREMENT,
	Date DATE NOT NULL,
	Time TIME NOT NULL,
	EPtype ENUM('EducationalWork','MCQ') NOT NULL,
	PRIMARY KEY(EPostID)
	)ENGINE = INNODB;

CREATE TABLE EducationalWork(
	EPostID BIGINT NOT NULL,
	ImagePath BIGINT,
	Caption VARCHAR(8000),
	PRIMARY KEY(EPostID)
	)ENGINE = INNODB;

CREATE TABLE Likes(
	UserID BIGINT NOT NULL,
	NFPostID BIGINT NOT NULL,
	CONSTRAINT PK_likes PRIMARY KEY(UserID,NFPostID)
	)ENGINE = INNODB;

CREATE TABLE MCQ(
	EPostID BIGINT NOT NULL,
	Caption VARCHAR(8000),
	PRIMARY KEY(EPostID)
	)ENGINE = INNODB;

CREATE TABLE MCQ_Answers(
	AnswerID BIGINT NOT NULL,
	Choice ENUM('1','2','3','4') NOT NULL,
	QuestionID BIGINT NOT NULL,
	PRIMARY KEY(AnswerID)
	)ENGINE = INNODB;

CREATE TABLE NewsFeeds(
	NFPostID BIGINT NOT NULL AUTO_INCREMENT,
	Date DATE NOT NULL,
	Time TIME NOT NULL,
	Caption VARCHAR(8000),
	PRIMARY KEY(NFPostID)
	)ENGINE = INNODB;

CREATE TABLE Posts(
	T_UserID BIGINT NOT NULL,
	UserID BIGINT NOT NULL,
	NFPostID BIGINT NOT NULL,
	CONSTRAINT PK_posts PRIMARY KEY(T_UserID,UserID,NFPostID)
	)ENGINE = INNODB;

CREATE TABLE Subject(
	UserID BIGINT NOT NULL,
	Subject VARCHAR(20),
	CONSTRAINT PK_subject PRIMARY KEY(UserID,Subject)
	)ENGINE = INNODB;

CREATE TABLE Share(
    ShareID BIGINT AUTO_INCREMENT,
    Time TIME,
    Date DATE,
    UserID BIGINT,
    RecieveUserID BIGINT,
    NFPostID BIGINT,
    PRIMARY KEY(ShareID)
    )ENGINE = INNODB;



ALTER TABLE Student
   ADD FOREIGN KEY(UserID) REFERENCES Users(UserID)
   ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE Teacher
   ADD FOREIGN KEY(UserID) REFERENCES Users(UserID)
   ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE Classroom_Has_EPost
   ADD FOREIGN KEY(ClassroomID) REFERENCES Classroom(ClassroomID) ON UPDATE CASCADE ON DELETE CASCADE,
   ADD FOREIGN KEY(EPostID) REFERENCES EducationalPost(EPostID) ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE Login
   ADD FOREIGN KEY(UserID) REFERENCES Users(UserID) ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE Classroom
   ADD FOREIGN KEY(UserID) REFERENCES Teacher(UserID) ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE Enroll
   ADD FOREIGN KEY(UserID) REFERENCES Users(UserID) ON UPDATE CASCADE ON DELETE CASCADE,
   ADD FOREIGN KEY(ClassroomID) REFERENCES Classroom(ClassroomID) ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE Answer_Student_Post_Relationship
   ADD FOREIGN KEY(S_UserID) REFERENCES Student(UserID) ON UPDATE CASCADE ON DELETE CASCADE,
   ADD FOREIGN KEY(AnswerID) REFERENCES Answer(AnswerID) ON UPDATE CASCADE ON DELETE CASCADE,
   ADD FOREIGN KEY(EPostID) REFERENCES EducationalPost(EPostID) ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE EDW_Answers
   ADD FOREIGN KEY(AnswerID) REFERENCES Answer(AnswerID) ON UPDATE CASCADE ON DELETE CASCADE;


ALTER TABLE EducationalWork
    ADD FOREIGN KEY(EPostID) REFERENCES EducationalPost(EPostID)
    ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE Likes
    ADD FOREIGN KEY(UserID) REFERENCES Users(UserID)
    ON UPDATE CASCADE ON DELETE CASCADE,
    ADD FOREIGN KEY(NFPostID) REFERENCES NewsFeeds(NFPostID)
    ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE MCQ
    ADD FOREIGN KEY(EPostID) REFERENCES EducationalPost(EPostID)
    ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE MCQ_Answers
    ADD FOREIGN KEY(AnswerID) REFERENCES Answer(AnswerID)
    ON UPDATE CASCADE ON DELETE CASCADE,
    ADD FOREIGN KEY(QuestionID) REFERENCES Question(QuestionID)
    ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE Posts
    ADD FOREIGN KEY(T_UserID) REFERENCES Teacher(UserID)
    ON UPDATE CASCADE ON DELETE CASCADE,
    ADD FOREIGN KEY(UserID) REFERENCES Users(UserID)
    ON UPDATE CASCADE ON DELETE CASCADE,
    ADD FOREIGN KEY(NFPostID) REFERENCES NewsFeeds(NFPostID)
    ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE Subject
    ADD FOREIGN KEY(UserID) REFERENCES Teacher(UserID)
    ON UPDATE CASCADE ON DELETE CASCADE;


ALTER TABLE Question
	ADD FOREIGN KEY(EPostId) REFERENCES MCQ(EPostId) ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE Question_Answer_Value
	ADD FOREIGN KEY(QuestionID) REFERENCES Question(QuestionID) ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE RemoveEntity
	ADD FOREIGN KEY(ReportID) REFERENCES Report(ReportID) ON UPDATE CASCADE ON DELETE CASCADE,
	ADD FOREIGN KEY(EmailID) REFERENCES Admin(EmailID) ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE User_Makes_Report
	ADD FOREIGN KEY(UserID) REFERENCES Users(UserID) ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE Qualifications
	ADD FOREIGN KEY(UserID) REFERENCES Teacher(UserID) ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE Add_Friends
	ADD FOREIGN KEY(UserID) REFERENCES Users(UserID) ON UPDATE CASCADE ON DELETE CASCADE,
	ADD FOREIGN KEY(Friend_UserID) REFERENCES Users(UserID) ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE Follows
	ADD FOREIGN KEY(S_UserID) REFERENCES Student(UserID) ON UPDATE CASCADE ON DELETE CASCADE,
	ADD FOREIGN KEY(T_UserID) REFERENCES Teacher(UserID) ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE News_Feed_Image
	ADD FOREIGN KEY(NFPostID) REFERENCES NewsFeeds(NFPostID) ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE Share
    ADD FOREIGN KEY(UserID) REFERENCES Users(UserID) ON UPDATE CASCADE ON DELETE CASCADE,
    ADD FOREIGN KEY(RecieveUserID) REFERENCES Users(UserID) ON UPDATE CASCADE ON DELETE CASCADE,
    ADD FOREIGN KEY(NFPostID) REFERENCES EducationalPost(EPostID) ON UPDATE CASCADE ON DELETE CASCADE;

INSERT INTO Admin (EmailID, Password, AdminName)
VALUES('farzanroxz123@gmail.com','a5252e680a4009804b846592c8d514c5faf29c99bfe02147039a2cf0e50638d3','frosty'),
('venushkachstc@gmail.com','68a89da22265e09b38a11232f21947a78f71f28fb05b61a82149aea4bdccac8e','Venushka'),
('jeewanthi.ch98@gmail.com','22f85309804be81bc7c5e7e1cb100c82ca366344387284d56394a1bb03cfb8fe','Jeewanthi'),
('rahuram666@gmail.com','dfe338b7c702ebc9fac2339f130510539ee7049d7106c612bba48e5ef7d9d4e7','Rahuram');